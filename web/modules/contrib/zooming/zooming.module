<?php

/**
 * @file
 * Provides Zooming integration.
 */

/**
 * Implements hook_library_info_alter().
 */
function zooming_library_info_alter(&$libraries, $extension) {
  if ($extension === 'zooming' && $library_path = zooming_libraries_get_path('zooming')) {
    $libraries['zooming']['js'] = ['/' . $library_path . '/build/zooming.min.js' => []];
  }
}

/**
 * Implements hook_blazy_attach_alter().
 */
function zooming_blazy_attach_alter(array &$load, $attach = []) {
  if (!empty($attach['zooming'])) {
    $load['library'][] = 'zooming/load';
  }
}

/**
 * Implements hook_blazy_lightboxes_alter().
 */
function zooming_blazy_lightboxes_alter(array &$lightboxes) {
  $lightboxes[] = 'zooming';
}

/**
 * Overrides variables for theme_blazy().
 */
function zooming_preprocess_blazy(&$variables) {
  $settings = &$variables['settings'];

  // Zooming is registered as lightbox, but we'll make it a hybrid of media
  // and lightbox switcher in order to support video which is inline by nature
  // of Zooming. This also fixes erratic behavior with clicked-through links.
  if (!empty($settings['media_switch']) && $settings['media_switch'] == 'zooming' && !empty($variables['url'])) {
    if (!empty($settings['embed_url'])) {
      $settings['player'] = TRUE;
    }

    $url = $variables['url'];

    // Copy lightbox URL attributes into the main attributes as we drop it.
    $url_attributes = $variables['url_attributes'];
    $variables['attributes']['data-media'] = $url_attributes['data-media'];

    // Disable lightbox for the hybrid of media and quasi-lightbox.
    $variables['url'] = $variables['settings']['icon'] = '';

    // Support video thumbnail for the lightbox.
    if (!empty($settings['type']) && $settings['type'] == 'video' && !empty($settings['box_url'])) {
      $url = $settings['box_url'];
    }

    // Provides the expected attributes for JS.
    // The library only works with IMG, not CSS background.
    if (!empty($variables['image'])) {
      $variables['image']['#attributes']['data-original'] = $url;
      $variables['image']['#attributes']['class'][] = 'zooming';
    }
  }
}

/**
 * Provides a wrapper to replace deprecated libraries_get_path() at ease.
 *
 * @todo remove and replace with blazy_libraries_get_path() post blazy:8.x-2.0.
 */
function zooming_libraries_get_path($name, $base_path = FALSE) {
  if (function_exists('blazy_libraries_get_path')) {
    return blazy_libraries_get_path($name, $base_path);
  }
  if (\Drupal::hasService('library.libraries_directory_file_finder')) {
    return \Drupal::service('library.libraries_directory_file_finder')->find($name);
  }

  $function = 'libraries_get_path';
  return is_callable($function) ? $function($name, $base_path) : FALSE;
}

/**
 * Implements hook_help().
 */
function zooming_help($route_name) {
  if ($route_name == 'help.page.zooming') {
    $output = file_get_contents(dirname(__FILE__) . '/README.md');
    // @todo remove check once Blazy has stable release.
    return function_exists('blazy_parse_markdown') ? blazy_parse_markdown($output) : '<pre>' . $output . '</pre>';
  }
  return '';
}
